name: "CI Build"

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read

jobs:
  run-tests:
    name: Python ${{ matrix.python-version }} Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest coverage pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # Create report directory
          mkdir -p report
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Generate comprehensive flake8 report
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --output-file=report/flake8-report.txt
          # Also show statistics in console
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Upload Flake8 Reports (only on latest version)
        if: ${{ matrix.node-version == '3.13' }}
        uses: actions/upload-artifact@v4
        with:
          name: flake8-${{ github.run_id }}
          path: report/flake8-report.txt
          retention-days: 1
          if-no-files-found: error
      - name: Test with pytest and generate coverage
        run: |
          python -m pytest test/ --cov=src --cov-report=lcov --cov-report=xml --cov-report=term-missing
      - name: Upload Coverage Reports (only on latest version)
        if: ${{ matrix.node-version == '3.13' }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ github.run_id }}
          path: coverage/
          retention-days: 1
          if-no-files-found: error
